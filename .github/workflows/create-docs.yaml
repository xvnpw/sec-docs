name: Run ai-security-analyzer on config changes

on:
  push:
    paths:
      - '**/**/config.json'

jobs:
  get_config_files:
    runs-on: ubuntu-latest
    outputs:
      config_files: ${{ steps.get_config_files.outputs.config_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get list of changed config.json files
        id: get_config_files
        uses: actions/github-script@v6
        with:
          script: |
            const commitSHA = context.sha;
            const response = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: commitSHA,
            });
            const changedFiles = response.data.files.map(f => f.filename);
            const configFilesChanged = changedFiles.filter(f => f.endsWith('config.json'));
            if (configFilesChanged.length === 0) {
              throw new Error('No changed config.json files found');
            }
            core.setOutput('config_files', JSON.stringify(configFilesChanged));

  analyze:
    needs: get_config_files
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config_file: ${{ fromJson(needs.get_config_files.outputs.config_files) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        # Removed persist-credentials: false

      - name: Set up git user
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"

      - name: Read config.json
        id: read_config
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const configFile = '${{ matrix.config_file }}';
            const configPath = path.join(process.env.GITHUB_WORKSPACE, configFile);
            const configContent = fs.readFileSync(configPath, 'utf8');
            const config = JSON.parse(configContent);
            core.setOutput('repo_url', config.repo_url || '');
            core.setOutput('repo_ref', config.repo_ref || '');
            core.setOutput('repo_tag', config.repo_tag || '');
            core.setOutput('analyzer_args', config.analyzer_args || '');
            core.setOutput('config_dir', path.dirname(configFile));

      - name: Clone target repository
        run: |
          git clone ${{ steps.read_config.outputs.repo_url }} target_repo
          cd target_repo
          if [ "${{ steps.read_config.outputs.repo_ref }}" != "" ]; then
            git checkout ${{ steps.read_config.outputs.repo_ref }}
          elif [ "${{ steps.read_config.outputs.repo_tag }}" != "" ]; then
            git checkout tags/${{ steps.read_config.outputs.repo_tag }}
          fi
        shell: bash

      - name: Run ai-security-analyzer via Docker
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          docker run --rm \
            --user $(id -u):$(id -g) \
            -v ${{ github.workspace }}/target_repo:/code \
            -e OPENAI_API_KEY \
            ghcr.io/xvnpw/ai-security-analyzer:latest \
            -v -t /code \
            -o /code/DESIGN_DOC.md \
            ${{ steps.read_config.outputs.analyzer_args }} 
        shell: bash

      - name: Move DESIGN_DOC.md to config directory
        run: |
          mv target_repo/DESIGN_DOC.md ${{ steps.read_config.outputs.config_dir }}/
        shell: bash

      - name: Clean up target_repo
        run: |
          rm -rf target_repo
        shell: bash

      - name: Set Branch Name
        id: set_branch_name
        run: |
          # Sanitize the config_file path to create a valid branch name
          BRANCH_NAME="ai-analyzer-output-${GITHUB_RUN_ID}-$(echo '${{ matrix.config_file }}' | tr '/\._' '-')"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: ${{ steps.set_branch_name.outputs.branch_name }}
          commit-message: "Add DESIGN_DOC.md generated by ai-security-analyzer"
          title: "Add DESIGN_DOC.md for ${{ matrix.config_file }}"
          body: "This PR adds the DESIGN_DOC.md generated by ai-security-analyzer."
          add-paths: |
            ${{ steps.read_config.outputs.config_dir }}/DESIGN_DOC.md
