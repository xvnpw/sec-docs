Unable to find image 'ghcr.io/xvnpw/ai-security-analyzer:latest' locally
latest: Pulling from xvnpw/ai-security-analyzer
1f3e46996e29: Pulling fs layer
dfb81f221332: Pulling fs layer
69d04f35a207: Pulling fs layer
5c3947958a83: Pulling fs layer
0e07bef7de6c: Pulling fs layer
dc1d62924e18: Pulling fs layer
af0d5719fdaf: Pulling fs layer
cc182fc92d33: Pulling fs layer
abc927ee421f: Pulling fs layer
8be0fe0e0342: Pulling fs layer
a91015bcf636: Pulling fs layer
abc927ee421f: Waiting
af0d5719fdaf: Waiting
cc182fc92d33: Waiting
5c3947958a83: Waiting
0e07bef7de6c: Waiting
dc1d62924e18: Waiting
8be0fe0e0342: Waiting
a91015bcf636: Waiting
1f3e46996e29: Verifying Checksum
1f3e46996e29: Download complete
dfb81f221332: Verifying Checksum
dfb81f221332: Download complete
5c3947958a83: Download complete
0e07bef7de6c: Verifying Checksum
0e07bef7de6c: Download complete
69d04f35a207: Verifying Checksum
69d04f35a207: Download complete
af0d5719fdaf: Verifying Checksum
af0d5719fdaf: Download complete
1f3e46996e29: Pull complete
dc1d62924e18: Verifying Checksum
dc1d62924e18: Download complete
cc182fc92d33: Verifying Checksum
cc182fc92d33: Download complete
8be0fe0e0342: Download complete
a91015bcf636: Download complete
abc927ee421f: Verifying Checksum
abc927ee421f: Download complete
dfb81f221332: Pull complete
69d04f35a207: Pull complete
5c3947958a83: Pull complete
0e07bef7de6c: Pull complete
dc1d62924e18: Pull complete
af0d5719fdaf: Pull complete
cc182fc92d33: Pull complete
abc927ee421f: Pull complete
8be0fe0e0342: Pull complete
a91015bcf636: Pull complete
Digest: sha256:ad7efc3224b1638db049bec18d512834b88de46094c6374a581c3282e7c833f8
Status: Downloaded newer image for ghcr.io/xvnpw/ai-security-analyzer:latest
2025-02-10 16:25:38,300 - __main__ - INFO - Starting AI Security Analyzer
2025-02-10 16:25:38,366 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 1 of 1
2025-02-10 16:27:19,816 - ai_security_analyzer.graphs - INFO - Actual token usage: 13492
2025-02-10 16:27:19,820 - __main__ - INFO - AI Security Analyzer completed successfully
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739204842.198597       1 init.cc:232] grpc_wait_for_shutdown_with_timeout() timed out.
2025-02-10 16:27:26,668 - __main__ - INFO - Starting AI Security Analyzer
2025-02-10 16:27:26,730 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 1 of 3
2025-02-10 16:28:01,681 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 2 of 3
2025-02-10 16:29:03,604 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 3 of 3
2025-02-10 16:32:07,151 - ai_security_analyzer.graphs - INFO - Actual token usage: 37253
2025-02-10 16:32:07,163 - __main__ - INFO - AI Security Analyzer completed successfully
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739205129.473472       1 init.cc:232] grpc_wait_for_shutdown_with_timeout() timed out.
2025-02-10 16:32:13,818 - __main__ - INFO - Starting AI Security Analyzer
2025-02-10 16:32:13,877 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 1 of 3
2025-02-10 16:32:49,856 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 2 of 3
2025-02-10 16:33:10,994 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 3 of 3
2025-02-10 16:36:55,480 - ai_security_analyzer.graphs - INFO - Actual token usage: 34101
2025-02-10 16:36:55,489 - __main__ - INFO - AI Security Analyzer completed successfully
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739205417.936845       1 init.cc:232] grpc_wait_for_shutdown_with_timeout() timed out.
2025-02-10 16:37:02,380 - __main__ - INFO - Starting AI Security Analyzer
2025-02-10 16:37:02,441 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 1 of 4
2025-02-10 16:37:36,923 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 2 of 4
2025-02-10 16:38:04,340 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 3 of 4
2025-02-10 16:38:19,694 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 4 of 4
2025-02-10 16:38:50,756 - ai_security_analyzer.graphs - ERROR - Graph execution failed: Invalid json output: ```json
{
  "attack_tree_objective": "[CN] Attacker's Goal: Steal Cryptocurrency or Manipulate Blockchain Interaction",
  "attack_sub_tree_visualization": "[Attacker's Goal: Steal Cryptocurrency or Manipulate Blockchain Interaction] [CN]\n    |\n    ---------------------------------\n    |\                               |\n[1. Compromise Node Directly] [HR]   [2. Exploit Geth-Specific Vulnerabilities] (Partial - Only 2.4 included)\n    |\                               |\n---------------------               ---------------------------------\n|                   |                               |\n[1.1 Weak RPC/IPC] [CN][HR]      [1.2 Node Software Vulns]      [2.4 Client-Side Vulnerabilities]\n|                   |                               |\n-----------     -----------------                   ---------------------------------\n|         |     |               |                               |\n[1.1.1]   [1.1.2][HR] [1.2.1][HR]     [1.2.2] (Not HR, but dependency of 1.2.1)  [2.4.1][HR]\nExposed   Unsafe API  Unpatched       Outdated Dependencies                 Private Key\nRPC/IPC   Methods     Geth [CN]       (e.g., LevelDB)                       Leakage\nPort [CN] Enabled [CN] Version                                               (e.g., via Clef)[CN]",
  "attack_sub_tree_paths": [
    {
      "title": "[CN] Attacker's Goal: Steal Cryptocurrency or Manipulate Blockchain Interaction",
      "text": "*Description:* The ultimate objective of the attacker, driving all subsequent actions. This could involve stealing funds, disrupting service, manipulating data, or gaining unauthorized control.\n    *Likelihood:* N/A (This is the goal, not an attack step)\n    *Impact:* Very High\n    *Effort:* N/A\n    *Skill Level:* N/A\n    *Detection Difficulty:* N/A"
    },
    {
      "title": "[1. Compromise Node Directly] [HR]",
      "text": "*Description:* This branch represents attacks that directly target the Geth node's infrastructure or configuration, rather than vulnerabilities within the Geth codebase itself. Successful attacks here often grant complete control.\n    *Likelihood:* Medium to High (Depends on security practices)\n    *Impact:* Very High\n    *Effort:* Variable (Depends on the specific attack)\n    *Skill Level:* Variable (Ranges from Novice to Expert)\n    *Detection Difficulty:* Variable (Ranges from Easy to Hard)"
    },
    {
      "title": "[1.1 Weak RPC/IPC Configuration] [CN][HR]",
      "text": "*Description:* This is a common and highly exploitable entry point.  Weaknesses in how the RPC (Remote Procedure Call) or IPC (Inter-Process Communication) interfaces are configured can allow attackers to directly interact with the node.\n    *Likelihood:* Medium (Unfortunately common, but awareness is increasing)\n    *Impact:* Very High\n    *Effort:* Low to Medium\n    *Skill Level:* Novice to Intermediate\n    *Detection Difficulty:* Easy to Medium"
    },
    {
      "title": "[1.1.1 Exposed RPC/IPC Port] [CN]",
      "text": "*Description:* The Geth node communicates via RPC and IPC.  If these ports are exposed to the public internet without proper authentication or firewall rules, an attacker can connect directly.\n    *Likelihood:* Medium\n    *Impact:* Very High\n    *Effort:* Very Low (Port scanning is trivial)\n    *Skill Level:* Novice\n    *Detection Difficulty:* Easy (Network monitoring, firewall logs)"
    },
    {
      "title": "[1.1.2 Unsafe API Methods Enabled] [HR]",
      "text": "*Description:* Geth's RPC interface offers various API methods. Some, like `admin` (node management) and `personal` (account unlocking), are extremely powerful.  If enabled without restrictions, an attacker can gain significant control, including stealing funds.\n    *Likelihood:* Medium (Requires exposed port, but some setups enable too many APIs)\n    *Impact:* Very High\n    *Effort:* Low (Once the port is open, API calls are simple)\n    *Skill Level:* Intermediate\n    *Detection Difficulty:* Medium (Requires monitoring RPC calls)"
    },
    {
      "title": "[1.2 Node Software Vulnerabilities]",
      "text": "*Description:* This refers to vulnerabilities in the Geth software itself or its dependencies."
    },
    {
      "title": "[1.2.1 Unpatched Geth Version] [CN][HR]",
      "text": "*Description:* Running an outdated version of Geth exposes the application to known vulnerabilities that have been patched in later releases. Attackers often exploit known vulnerabilities.\n    *Likelihood:* Medium (Depends on update practices)\n    *Impact:* Variable (Depends on the vulnerability, can range from DoS to RCE)\n    *Effort:* Variable (Depends on the vulnerability)\n    *Skill Level:* Variable (Ranges from script kiddie to expert)\n    *Detection Difficulty:* Medium (Requires vulnerability scanning)"
    },
    {
      "title": "[1.2.2 Outdated Dependencies]",
      "text": "*Description:* Geth relies on external libraries (like LevelDB). Vulnerabilities in these can also be exploited. While not a *direct* high-risk path on its own, it's included because it contributes to the risk of 1.2.1.\n    *Likelihood:* Medium\n    *Impact:* Variable\n    *Effort:* Variable\n    *Skill Level:* Variable\n    *Detection Difficulty:* Medium"
    },
    {
      "title": "[2. Exploit Geth-Specific Vulnerabilities]",
      "text": "*Description:* Only 2.4 is included in the high-risk sub-tree"
    },
    {
      "title": "[2.4 Client-Side Vulnerabilities]",
      "text": "*Description:* These are vulnerabilities in *how* the application uses the Geth library, rather than vulnerabilities in Geth itself."
    },
    {
      "title": "[2.4.1 Private Key Leakage (e.g., via Clef)] [HR] [CN]",
      "text": "*Description:* If the application mishandles private keys (stores them insecurely, logs them, exposes them through misconfigured Clef), an attacker can steal them and gain control of associated funds. This is a direct path to the attacker's goal.\n    *Likelihood:* Medium (Depends entirely on the application's security practices)\n    *Impact:* Very High (Complete loss of funds)\n    *Effort:* Variable (Depends on how the key is exposed)\n    *Skill Level:* Variable (Ranges from novice to expert)\n    *Detection Difficulty:* Variable (Depends on where the leak occurs)\n    *Clef [CN]*: If Clef is used for key management, it becomes a critical node. Misconfiguration or vulnerabilities in its usage can lead directly to key compromise."
    }
  ]
}
```
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-02-10 16:38:50,759 - __main__ - ERROR - Application error: Invalid json output: ```json
{
  "attack_tree_objective": "[CN] Attacker's Goal: Steal Cryptocurrency or Manipulate Blockchain Interaction",
  "attack_sub_tree_visualization": "[Attacker's Goal: Steal Cryptocurrency or Manipulate Blockchain Interaction] [CN]\n    |\n    ---------------------------------\n    |\                               |\n[1. Compromise Node Directly] [HR]   [2. Exploit Geth-Specific Vulnerabilities] (Partial - Only 2.4 included)\n    |\                               |\n---------------------               ---------------------------------\n|                   |                               |\n[1.1 Weak RPC/IPC] [CN][HR]      [1.2 Node Software Vulns]      [2.4 Client-Side Vulnerabilities]\n|                   |                               |\n-----------     -----------------                   ---------------------------------\n|         |     |               |                               |\n[1.1.1]   [1.1.2][HR] [1.2.1][HR]     [1.2.2] (Not HR, but dependency of 1.2.1)  [2.4.1][HR]\nExposed   Unsafe API  Unpatched       Outdated Dependencies                 Private Key\nRPC/IPC   Methods     Geth [CN]       (e.g., LevelDB)                       Leakage\nPort [CN] Enabled [CN] Version                                               (e.g., via Clef)[CN]",
  "attack_sub_tree_paths": [
    {
      "title": "[CN] Attacker's Goal: Steal Cryptocurrency or Manipulate Blockchain Interaction",
      "text": "*Description:* The ultimate objective of the attacker, driving all subsequent actions. This could involve stealing funds, disrupting service, manipulating data, or gaining unauthorized control.\n    *Likelihood:* N/A (This is the goal, not an attack step)\n    *Impact:* Very High\n    *Effort:* N/A\n    *Skill Level:* N/A\n    *Detection Difficulty:* N/A"
    },
    {
      "title": "[1. Compromise Node Directly] [HR]",
      "text": "*Description:* This branch represents attacks that directly target the Geth node's infrastructure or configuration, rather than vulnerabilities within the Geth codebase itself. Successful attacks here often grant complete control.\n    *Likelihood:* Medium to High (Depends on security practices)\n    *Impact:* Very High\n    *Effort:* Variable (Depends on the specific attack)\n    *Skill Level:* Variable (Ranges from Novice to Expert)\n    *Detection Difficulty:* Variable (Ranges from Easy to Hard)"
    },
    {
      "title": "[1.1 Weak RPC/IPC Configuration] [CN][HR]",
      "text": "*Description:* This is a common and highly exploitable entry point.  Weaknesses in how the RPC (Remote Procedure Call) or IPC (Inter-Process Communication) interfaces are configured can allow attackers to directly interact with the node.\n    *Likelihood:* Medium (Unfortunately common, but awareness is increasing)\n    *Impact:* Very High\n    *Effort:* Low to Medium\n    *Skill Level:* Novice to Intermediate\n    *Detection Difficulty:* Easy to Medium"
    },
    {
      "title": "[1.1.1 Exposed RPC/IPC Port] [CN]",
      "text": "*Description:* The Geth node communicates via RPC and IPC.  If these ports are exposed to the public internet without proper authentication or firewall rules, an attacker can connect directly.\n    *Likelihood:* Medium\n    *Impact:* Very High\n    *Effort:* Very Low (Port scanning is trivial)\n    *Skill Level:* Novice\n    *Detection Difficulty:* Easy (Network monitoring, firewall logs)"
    },
    {
      "title": "[1.1.2 Unsafe API Methods Enabled] [HR]",
      "text": "*Description:* Geth's RPC interface offers various API methods. Some, like `admin` (node management) and `personal` (account unlocking), are extremely powerful.  If enabled without restrictions, an attacker can gain significant control, including stealing funds.\n    *Likelihood:* Medium (Requires exposed port, but some setups enable too many APIs)\n    *Impact:* Very High\n    *Effort:* Low (Once the port is open, API calls are simple)\n    *Skill Level:* Intermediate\n    *Detection Difficulty:* Medium (Requires monitoring RPC calls)"
    },
    {
      "title": "[1.2 Node Software Vulnerabilities]",
      "text": "*Description:* This refers to vulnerabilities in the Geth software itself or its dependencies."
    },
    {
      "title": "[1.2.1 Unpatched Geth Version] [CN][HR]",
      "text": "*Description:* Running an outdated version of Geth exposes the application to known vulnerabilities that have been patched in later releases. Attackers often exploit known vulnerabilities.\n    *Likelihood:* Medium (Depends on update practices)\n    *Impact:* Variable (Depends on the vulnerability, can range from DoS to RCE)\n    *Effort:* Variable (Depends on the vulnerability)\n    *Skill Level:* Variable (Ranges from script kiddie to expert)\n    *Detection Difficulty:* Medium (Requires vulnerability scanning)"
    },
    {
      "title": "[1.2.2 Outdated Dependencies]",
      "text": "*Description:* Geth relies on external libraries (like LevelDB). Vulnerabilities in these can also be exploited. While not a *direct* high-risk path on its own, it's included because it contributes to the risk of 1.2.1.\n    *Likelihood:* Medium\n    *Impact:* Variable\n    *Effort:* Variable\n    *Skill Level:* Variable\n    *Detection Difficulty:* Medium"
    },
    {
      "title": "[2. Exploit Geth-Specific Vulnerabilities]",
      "text": "*Description:* Only 2.4 is included in the high-risk sub-tree"
    },
    {
      "title": "[2.4 Client-Side Vulnerabilities]",
      "text": "*Description:* These are vulnerabilities in *how* the application uses the Geth library, rather than vulnerabilities in Geth itself."
    },
    {
      "title": "[2.4.1 Private Key Leakage (e.g., via Clef)] [HR] [CN]",
      "text": "*Description:* If the application mishandles private keys (stores them insecurely, logs them, exposes them through misconfigured Clef), an attacker can steal them and gain control of associated funds. This is a direct path to the attacker's goal.\n    *Likelihood:* Medium (Depends entirely on the application's security practices)\n    *Impact:* Very High (Complete loss of funds)\n    *Effort:* Variable (Depends on how the key is exposed)\n    *Skill Level:* Variable (Ranges from novice to expert)\n    *Detection Difficulty:* Variable (Depends on where the leak occurs)\n    *Clef [CN]*: If Clef is used for key management, it becomes a critical node. Misconfiguration or vulnerabilities in its usage can lead directly to key compromise."
    }
  ]
}
```
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE . You can try to run with --resume to resume from last checkpoint.
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739205533.034151       1 init.cc:232] grpc_wait_for_shutdown_with_timeout() timed out.
2025-02-10 16:39:07,366 - __main__ - INFO - Starting AI Security Analyzer
2025-02-10 16:39:07,430 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 1 of 4
2025-02-10 16:39:41,674 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 2 of 4
2025-02-10 16:40:10,173 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 3 of 4
2025-02-10 16:40:30,588 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 4 of 4
2025-02-10 16:48:48,967 - ai_security_analyzer.graphs - INFO - Actual token usage: 69451
2025-02-10 16:48:48,995 - __main__ - INFO - AI Security Analyzer completed successfully
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739206131.306364       1 init.cc:232] grpc_wait_for_shutdown_with_timeout() timed out.
2025-02-10 16:48:55,742 - __main__ - INFO - Starting AI Security Analyzer
2025-02-10 16:48:55,803 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 1 of 3
2025-02-10 16:49:28,528 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 2 of 3
2025-02-10 16:51:01,521 - ai_security_analyzer.github2_deep_base_agents - INFO - Running internal step 3 of 3
2025-02-10 17:03:20,886 - ai_security_analyzer.graphs - INFO - Actual token usage: 80601
2025-02-10 17:03:20,925 - __main__ - INFO - AI Security Analyzer completed successfully
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1739207003.216887       1 init.cc:232] grpc_wait_for_shutdown_with_timeout() timed out.
